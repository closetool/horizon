name: Lint & Unit Test

on:
  push:
    branches:
      - master
      - main
    paths:
      - '**.go'
  pull_request:
    paths:
      - '**.go'

permissions:
  contents: read

jobs:
  lint:
    name: golangci-lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.15
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.47.3

  unit-test:
    strategy:
      matrix:
        go: [1.15]
    name: unit-test
    needs: [lint]
    runs-on: ubuntu-20.04
    steps:
      - name: env
        run: |
          echo ${{ github.head_ref }}
          echo ${{ github.base_ref }}
          echo ${{ github.ref }}
          echo ${{ github.ref_name }}
          echo ${{ github.sha }}
          echo $GITHUB_REF_NAME
          echo $GITHUB_SHA
          echo $(Build.SourceBranchName)
          echo $(Build.SourceVersion)

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/checkout@v3

      - name: Upload coverage data to Code Climate
        id: prefix
        env:
          GITHUB_REF_NAME: ${{ github.head_ref }}
        run: |
          echo $GITHUB_REF_NAME
          echo "PREFIX=$(go list -m)" >> $GITHUB_OUTPUT

      - uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/coverage.out:gocov
          coverageCommand: go test -v -coverprofile=coverage.out ./...
          prefix: ${{ steps.prefix.outputs.PREFIX }}
          debug: true
